<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Stay Hungry</title>
  <subtitle>stay foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://stayhungrystayfoollish.github.io/"/>
  <updated>2017-01-17T11:57:49.090Z</updated>
  <id>https://stayhungrystayfoollish.github.io/</id>
  
  <author>
    <name>Yu Shi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://stayhungrystayfoollish.github.io/2017/01/17/hello-world/"/>
    <id>https://stayhungrystayfoollish.github.io/2017/01/17/hello-world/</id>
    <published>2017-01-17T11:57:49.134Z</published>
    <updated>2017-01-17T11:57:49.090Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>漫谈JQuery中的ajax</title>
    <link href="https://stayhungrystayfoollish.github.io/2017/01/17/%E6%BC%AB%E8%B0%88ajax/"/>
    <id>https://stayhungrystayfoollish.github.io/2017/01/17/漫谈ajax/</id>
    <published>2017-01-17T02:52:38.000Z</published>
    <updated>2017-01-17T13:09:17.758Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ajax通用写法："><a href="#ajax通用写法：" class="headerlink" title="ajax通用写法："></a>ajax通用写法：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">$.ajax(&#123;</div><div class="line">    url: &quot;http://www.hzhuti.com&quot;,</div><div class="line">    dataType: &quot;json&quot;,</div><div class="line">    async: true,</div><div class="line">    type: &quot;post&quot;,</div><div class="line">    data: &#123;id: value&#125;,</div><div class="line">    beforeSend: function (request) &#123;</div><div class="line">        request.setRequestHeader(&quot;Content-type&quot;, &quot;application/json&quot;);</div><div class="line">        request.setRequestHeader(&quot;Source&quot;, &quot;101&quot;);</div><div class="line">        request.setRequestHeader(&quot;Token&quot;, &quot;aaw--wssw-ss...&quot;);</div><div class="line">    &#125;,</div><div class="line">    success: function (data) &#123;</div><div class="line"></div><div class="line">    &#125;,</div><div class="line">    complete: function () &#123;</div><div class="line"></div><div class="line">    &#125;,</div><div class="line">    error: function () &#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="jQuery中-ajax-方法参数详解"><a href="#jQuery中-ajax-方法参数详解" class="headerlink" title="jQuery中$.ajax()方法参数详解"></a>jQuery中$.ajax()方法参数详解</h2><p>url:<br>类型:string<br>(默认为当前页面地址),是指发送请求页面的地址</p>
<hr>
<p>type:<br>类型: String<br>请求方式（post或get）默认为get。注意其他http请求方法，例如put和delete也可以使用，但仅部分浏览器支持。<br>post和get区别:get请求会将请求参数跟在url后传递,post请求则是作为http消息的实体内容发送给web服务器;<br>get请求对传输数据大小有限制(通常不能大于2KB),而post请求方式传递数据量比get要大得多(理论上大小不受限制);<br>get请求的数据会被浏览器缓存起来,因此其他人可以通过浏览器的历史记录取到这些信息:例如账号和密码等,而post方式则相对来说可以避免这些问题。 </p>
<hr>
<p>timeout:<br>类型:Number<br>设置请求超时时间（毫秒）。此设置将覆盖$.ajaxSetup()方法的全局设置。</p>
<hr>
<p>async:<br>类型：Boolean<br>默认设置为true，所有请求均为异步请求。如果需要发送同步请求，请将此选项设置为false。注意，同步请求将锁住浏览器，用户其他操作必须等待请求完成才可以执行。</p>
<hr>
<p>cache:<br>类型:Boolean<br>默认为true（当dataType为script时，默认为false）。设置为false将不会从浏览器缓存中加载请求信息</p>
<hr>
<p>data:<br>类型:String或Object<br>发送到服务器的数据。如果已经不是字符串，将自动转换为字符串格式。get请求中将附加在url后。防止这种自动转换，可以查看processData选项。对象必须为key/value格式，例如{foo1:”bar1”,foo2:”bar2”}转换为&amp;foo1=bar1&amp;foo2=bar2。如果是数组，JQuery将自动为不同值对应同一个名称。例如{foo:[“bar1”,”bar2”]}转换为&amp;foo=bar1&amp;foo=bar2。</p>
<hr>
<p>dataType:<br>类型:Number<br>预期服务器返回的数据类型。如果不指定，JQuery将自动根据http包mime信息返回responseXML或responseText，并作为回调函数参数传递。<br>可用类型如下：</p>
<ol>
<li>xml：返回XML文档，可用JQuery处理。</li>
<li>html：返回纯文本HTML信息；包含的script标签会在插入DOM时执行。</li>
<li>script：返回纯文本JavaScript代码。不会自动缓存结果。除非设置了cache参数。注意在远程请求时（不在同一个域下），所有post请求都将转为get请求。</li>
<li>json：返回JSON数据。</li>
<li>jsonp：JSONP格式。使用SONP形式调用函数时，例如myurl?callback=?，JQuery将自动替换后一个 “?”为正确的函数名，以执行回调函数。</li>
<li>text：返回纯文本字符串。</li>
</ol>
<hr>
<p>beforeSend:<br>类型:Function<br>发送请求前可以修改XMLHttpRequest对象的函数，例如添加自定义HTTP头。在beforeSend中如果返回false可以取消本次ajax请求。XMLHttpRequest对象是惟一的参数。</p>
<hr>
<p>complete:<br>类型:Function<br>请求完成后调用的回调函数（请求成功或失败时均调用）。参数：XMLHttpRequest对象和一个描述成功请求类型的字符串</p>
<hr>
<p>success:<br>类型:Function<br>请求成功后调用的回调函数，有两个参数。(1)由服务器返回，并根据dataType参数进行处理后的数据。 (2)描述状态的字符串。<br>function(data, textStatus){<br>//data可能是xmlDoc、jsonObj、html、text等等<br>this;  //调用本次ajax请求时传递的options参数  </p>
<hr>
<p>erro:<br>类型:Function<br>请求失败时被调用的函数。该函数有3个参数，即XMLHttpRequest对象、错误信息、捕获的错误对象(可选)。</p>
<hr>
<p>processData<br>类型：Boolean<br>默认为true。 默认情况下，发送的数据将被转换为对象(技术上讲并非字符串) 以配合默认内容类型 “application/x-www-form-urlencoded”。如果要发送 DOM 树信息或其它不希望转换的信息，请设置为 false。</p>
<hr>
<p>global:<br>类型:Boolean<br>默认为true。表示是否触发全局ajax事件。设置为false将不会触发全局ajax事件，ajaxStart或ajaxStop可用于控制各种ajax事件。</p>
<h2 id="jquery的ajax方法的全部全局事件"><a href="#jquery的ajax方法的全部全局事件" class="headerlink" title="jquery的ajax方法的全部全局事件"></a>jquery的ajax方法的全部全局事件</h2><p>ajax全局事件，有个典型的应用场合：<br>你的页面存在多个甚至为数不少的ajax请求，但是这些ajax请求都有相同的消息机制。ajax请求开始前显示一个提示框，提示“正在读取数据“；ajax请求成功时提示框显示“数据获取成功”；ajax请求结束后隐藏提示框。<br>不使用全局事件的做法是：<br>给$.ajax()加上beforeSend、success、complete回调函数，在回调函数中加上处理提示框。</p>
<h3 id="全局事件如下："><a href="#全局事件如下：" class="headerlink" title="全局事件如下："></a>全局事件如下：</h3><ul>
<li>ajaxSetup: 设置全局默认设置。该函数用于更改jQuery中AJAX请求的默认设置选项。之后执行的所有AJAX请求，如果对应的选项参数没有设置，将使用更改后的默认设置。<br>使用范例：</li>
</ul>
<pre><code>//设置AJAX的全局默认选项
$.ajaxSetup({
    url: &quot;/index.html&quot;, // 默认URL
    aysnc: false, // 默认同步加载
    type: &quot;POST&quot;, // 默认使用POST方式
    headers: { // 默认添加请求头
        &quot;Author&quot;: &quot;CodePlayer&quot;,
        &quot;Powered-By&quot;: &quot;CodePlayer&quot;
    },
    error: function (jqXHR, textStatus, errorMsg) { 
    // 出错时默认的处理函数
        // jqXHR 是经过jQuery封装的XMLHttpRequest对象
        // textStatus 可能为： null、&quot;timeout&quot;、&quot;error&quot;、&quot;abort&quot;或&quot;parsererror&quot;
        // errorMsg 可能为： &quot;Not Found&quot;、&quot;Internal Server Error&quot;等

        // 提示形如：发送AJAX请求到&quot;/index.html&quot;时出错[404]：Not Found
        alert(&apos;发送AJAX请求到&quot;&apos; + this.url + &apos;&quot;时出错[&apos; + jqXHR.status + &apos;]：&apos; + errorMsg);
    }
});

// 未设置任何参数，但url、async、type、headers、error等参数的默认值均已被$.ajaxSetup()更改(如上)
$.ajax();
// 设置了url、type、success、error，就使用自己设置的参数值
</code></pre><ul>
<li>ajaxStart：ajax请求开始前</li>
<li>ajaxSend：ajax请求时</li>
<li>ajaxSuccess：ajax获取数据后</li>
<li>ajaxComplete：ajax请求完成时</li>
<li>ajaxError：ajax请求发生错误后</li>
<li>ajaxStop：ajax请求停止后</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ajax通用写法：&quot;&gt;&lt;a href=&quot;#ajax通用写法：&quot; class=&quot;headerlink&quot; title=&quot;ajax通用写法：&quot;&gt;&lt;/a&gt;ajax通用写法：&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    url: &amp;quot;http://www.hzhuti.com&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dataType: &amp;quot;json&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    async: true,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    type: &amp;quot;post&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    data: &amp;#123;id: value&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    beforeSend: function (request) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        request.setRequestHeader(&amp;quot;Content-type&amp;quot;, &amp;quot;application/json&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        request.setRequestHeader(&amp;quot;Source&amp;quot;, &amp;quot;101&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        request.setRequestHeader(&amp;quot;Token&amp;quot;, &amp;quot;aaw--wssw-ss...&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    success: function (data) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    complete: function () &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    error: function () &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="js" scheme="https://stayhungrystayfoollish.github.io/categories/js/"/>
    
    
      <category term="jquery-ajax" scheme="https://stayhungrystayfoollish.github.io/tags/jquery-ajax/"/>
    
  </entry>
  
  <entry>
    <title>background背景属性</title>
    <link href="https://stayhungrystayfoollish.github.io/2017/01/07/background%E5%B1%9E%E6%80%A7/"/>
    <id>https://stayhungrystayfoollish.github.io/2017/01/07/background属性/</id>
    <published>2017-01-07T08:15:02.000Z</published>
    <updated>2017-01-17T12:58:28.320Z</updated>
    
    <content type="html"><![CDATA[<p>background背景属性主要用于设置html页面背景的样式，它的值是复合属性值组合，也就是背景单词的值可以跟多个属性值，值与值之间使用一个空格间隔即可。它主要包含以下属性：<br>background-color || background-image || background-repeat || background-attachment || background-position (css2)<br>background-clip || background-origin || background-size || background-break (css3)<br><a id="more"></a></p>
<h2 id="background-color"><a href="#background-color" class="headerlink" title="background-color:"></a>background-color:</h2><p>为元素设置一种纯色。这种颜色会填充元素的内容、内边距和边框区域，扩展到元素边框的外边界（但不包括外边距）。如果边框有透明部分（如虚线边框），会透过这些透明部分显示出背景色。</p>
<p>background-color属性在css3版本里面稍微做了增强，除了指定background-color背景颜色之外，还可以对不使用的标签元素背景图片进行去色处理，用于当背景图像不可见时保持与文本颜色有一定的对比度。<br>background-color: green / blue;此例子中，背景颜色可能是绿色，然而，如果底部背景图片无效的话，蓝色将代替绿色来显示。如果没有指定某个颜色，它将其视为透明。</p>
<h2 id="background-image"><a href="#background-image" class="headerlink" title="background-image:"></a>background-image:</h2><p>为元素设置背景图像。元素的背景占据了元素的全部尺寸，包括内边距和边框，但不包括外边距。默认地，背景图像位于元素的左上角，并在水平和垂直方向上重复。提示：请设置一种可用的背景颜色，这样的话，假如背景图像不可用，页面也可获得良好的视觉效果。<br>范例： background-image: url(bgimage.gif);</p>
<h2 id="background-repeat-repeat-repeat-x-repeat-y-no-repeat-space-css3-round-css3"><a href="#background-repeat-repeat-repeat-x-repeat-y-no-repeat-space-css3-round-css3" class="headerlink" title="background-repeat: repeat|repeat-x|repeat-y|no-repeat|space(css3)|round(css3) **"></a>background-repeat: repeat|repeat-x|repeat-y|no-repeat|space(css3)|round(css3) **</h2><p>设置是否及如何重复背景图像。默认地，背景图像在水平和垂直方向上重复。</p>
<p>repeat:背景图像将在垂直方向和水平方向重复，为默认值；<br>repeat-x:背景图像在x轴重复；<br>repeat-y:背景图像在y轴重复；<br>no-repeat:背景图像不重复。</p>
<p>css2中设置背景时，它经常被标签元素截取而显示不全，css3增加了2个新属性来修复此问题。<br>space：图片以相同的间距平铺且填充整个标签元素，不会改变大小。<br>round：图片自动缩放直到适应且填充整个标签元素。<br>background-repeat 可以定义两个值，来定义横向和竖向repeat：<br>范例：background-repeat: round space; (width 调整 , height 固定) ,background-repeat: space round; (width 固定, height 调整 ),background-repeat: space no-repeat; (定义横向的填充).</p>
<h2 id="background-attachment：scroll-fixed-local（css3）"><a href="#background-attachment：scroll-fixed-local（css3）" class="headerlink" title="background-attachment：scroll|fixed|local（css3） **"></a>background-attachment：scroll|fixed|local（css3） **</h2><p>设置背景图像是否固定或者随着页面的其余部分滚动。属性值如下：</p>
<p>fixed：背景图像相对于窗体固定。<br>scroll：背景图像相对于元素固定，也就是说当元素内容滚动时背景图像不会跟着滚动，因为背景图像总是要跟着元素本身。但会随元素的祖先元素或窗体一起滚动。<br>local（css3）：背景图像相对于元素内容固定，也就是说当元素随元素滚动时背景图像也会跟着滚动，因为背景图像总是要跟着内容。（CSS3）</p>
<p><strong>5.background-position: top left|top center|top right|center left|center center|center right|bottom left|bottom center|bottom right </strong><br>设置背景图像的起始位置.这个属性设置背景原图像（由 background-image 定义）在x轴和y轴的位置，背景图像如果要重复，将从这一点开始。<br>提示：您需要把 background-attachment 属性设置为 “fixed”，才能保证该属性在 Firefox 和 Opera 中正常工作。也可以只设置1个值同时表示x轴和y轴的位置。<br>范例：background-position: center 100%(图片水平居中)</p>
<h1 id="css3新增属性"><a href="#css3新增属性" class="headerlink" title="css3新增属性"></a>css3新增属性</h1><h2 id="background-clip-padding-box-border-box-content-box"><a href="#background-clip-padding-box-border-box-content-box" class="headerlink" title="background-clip: padding-box|border-box|content-box **"></a>background-clip: padding-box|border-box|content-box **</h2><p>background-clip 属性规定背景的绘制区域,它能够控制背景显示的位置。属性值如下：</p>
<p>border-box：背景在border边框下开始显示<br>padding-box：背景在padding下开始显示，而不是border边框下开始<br>content-box：背景在内容区域下开始显示，而不是border边框下开始或padding下开始。</p>
<h2 id="background-origin：-padding-box-border-box-content-box"><a href="#background-origin：-padding-box-border-box-content-box" class="headerlink" title="background-origin： padding-box|border-box|content-box  **"></a>background-origin： padding-box|border-box|content-box  **</h2><p>规定 background-position 属性相对于什么位置来定位。可以用background-position计算定位是从border，padding或content boxes内容区域算起（类似background-clip）。属性值如下：</p>
<p>border-box：从border边框位置算起<br>padding-box：从padding位置算起<br>content-box：从content-box内容区域位置算起</p>
<h2 id="background-size：length-percentage-cover-contain"><a href="#background-size：length-percentage-cover-contain" class="headerlink" title="background-size：length|percentage|cover|contain  **"></a>background-size：length|percentage|cover|contain  **</h2><p>background-size 属性规定背景图像的尺寸。属性值如下：</p>
<p>length: 设置背景图像的宽度和高度<br>percentage: 以父元素的百分比来设置背景图像的宽度和高度<br>cover: 把背景图像扩展至足够大，以使背景图像完全覆盖<strong> 背景区域 </strong><br>contain: 把图像图像扩展至最大尺寸，以使其宽度和高度完全适应<strong> 内容区域 </strong><br>范例：background-size:100px 100px;background-size:50%</p>
<h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><p>当背景只使用单一的颜色或者图片做背景时，可以合理使用background简写，而不必使用background-color或者background-image，因为合理使用简写可以帮助你清空其他相关的属性。合理使用简写是一种良好的防卫性编码方式,可以抵御未来的风险。<br>范例：background: rebeccapurple;<br>       background-color: rebeccapurple;<br>以上两行代码并不是等价的，前者简写可以确保得到纯色背景，而后者使用的是展开的形式，其背景有可能显示其他的图片或者渐变图案等等，因为同时还有一条background-image在起作用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;background背景属性主要用于设置html页面背景的样式，它的值是复合属性值组合，也就是背景单词的值可以跟多个属性值，值与值之间使用一个空格间隔即可。它主要包含以下属性：&lt;br&gt;background-color || background-image || background-repeat || background-attachment || background-position (css2)&lt;br&gt;background-clip || background-origin || background-size || background-break (css3)&lt;br&gt;
    
    </summary>
    
      <category term="css" scheme="https://stayhungrystayfoollish.github.io/categories/css/"/>
    
    
      <category term="background" scheme="https://stayhungrystayfoollish.github.io/tags/background/"/>
    
  </entry>
  
</feed>
